<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.api.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.example.api.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_number" property="userNumber" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="indentity_id" property="indentityId" jdbcType="INTEGER" />
    <result column="station" property="station" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="is_approve" property="isApprove" jdbcType="VARCHAR" />
    <result column="accumulate" property="accumulate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_number, username, password, age, sex, indentity_id, station, phone, email, 
    level_id, is_approve, accumulate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.api.entity.User" >
    insert into user (id, user_number, username, 
      password, age, sex, 
      indentity_id, station, phone, 
      email, level_id, is_approve, 
      accumulate)
    values (#{id,jdbcType=INTEGER}, #{userNumber,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{sex,jdbcType=VARCHAR}, 
      #{indentityId,jdbcType=INTEGER}, #{station,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{levelId,jdbcType=INTEGER}, #{isApprove,jdbcType=VARCHAR}, 
      #{accumulate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.api.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userNumber != null" >
        user_number,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="indentityId != null" >
        indentity_id,
      </if>
      <if test="station != null" >
        station,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="isApprove != null" >
        is_approve,
      </if>
      <if test="accumulate != null" >
        accumulate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userNumber != null" >
        #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="indentityId != null" >
        #{indentityId,jdbcType=INTEGER},
      </if>
      <if test="station != null" >
        #{station,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="isApprove != null" >
        #{isApprove,jdbcType=VARCHAR},
      </if>
      <if test="accumulate != null" >
        #{accumulate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.api.entity.User" >
    update user
    <set >
      <if test="userNumber != null" >
        user_number = #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="indentityId != null" >
        indentity_id = #{indentityId,jdbcType=INTEGER},
      </if>
      <if test="station != null" >
        station = #{station,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="isApprove != null" >
        is_approve = #{isApprove,jdbcType=VARCHAR},
      </if>
      <if test="accumulate != null" >
        accumulate = #{accumulate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.api.entity.User" >
    update user
    set user_number = #{userNumber,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=VARCHAR},
      indentity_id = #{indentityId,jdbcType=INTEGER},
      station = #{station,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      level_id = #{levelId,jdbcType=INTEGER},
      is_approve = #{isApprove,jdbcType=VARCHAR},
      accumulate = #{accumulate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectUserByUsernameAndPassword" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username} and password = #{password}
  </select>
</mapper>